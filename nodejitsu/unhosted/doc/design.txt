LOCAL:
======
_shadowIndex: {
    (key): (timestamp)
  }
_shadowRemote: {
    (key): (timestamp)
  }
_shadowItem_(key): (value) -> for detecting changes; only in autosave mode.
(key): (value)

local ('_shadowIndex') is never behind on remote, except when logging in, when it's still busy pulling in all the keys. it might be ahead on some keys though, when working offline, or when not logged in, or when still busy pushing out all latest changed keys.

REMOTE:
=======
_shadowIndex: {
  (key): (timestamp)
}
(key)_(timestamp): (value) -> the timestamp is added so that you can pre-upload new content, and then atomically PUT the index



module structure:


div
window.remoteStorage.configure()
  controller
    modules:
      cache
      webfinger
      oauth
      backend
        - simple
        - CouchDB
        - GoogleDocs
window.remoteStorage
StorageEvents

default demo now: sync-mode with browserid
syncLocalStorage: true
syncInterval: 10
preferBrowserIdAlways: true
category: location.host

- include with these params. it creates modules inside closures, inside controller closure, that exports only configure function (for now)
- configure function knows when to call init functions
- inside closure that creates poorMansJQuery, reads in-tag options, calls configure

button:
- when not logged in: browserid logo
- when logged in, logout button
- when disconnected, orange logout button and spinner maybe

what should happen if someone logs in with an account that useraddress.net can't make chocolate from?
- call a callback; libredocs.org should refer to yourremotestorage.com
- if callback not implemented, show alert or red error that disappears and return to browserid button.

control keys:
=============
_remoteStorageUserAddress
_remoteStorageCategory
_remoteStorageKV
_remoteStorageOauthToken
_remoteStorageAPI
_remoteStorageAuthAddress

actions:
========
_remoteStorageDirties = [
  { key: [key]: true/false outbound?
  }
_remoteStorageWorking_[key] = timestamp/undefined

data:
=====
_remoteStorage_[key] = {
  value: [userValueAsString],
  _rev: CouchDB-revision,
  }

local cache index:
==================
remoteStorageIndex = [
  [key]: timestamp
  ...
  ]

