<!DOCTYPE html>
<html lang="en">
  <head>
    <script src="../sha1/sha1.js"></script>
    <script src="../base64/base64.js"></script>
    <script>
      function showForm() {
        document.getElementById('formDiv').innerHTML =
          '<p>Once you logged in with BrowserId, you can:</p>\n'
          +'  <input type="submit" value="Allow this app to read and write on your couch" onclick="allow();">\n';
      }
      function httpCall(couchAddress, user, pass, dbName, key, value, method, cb) {
        console.log('couchPut("'+couchAddress+'", "'+user+'", "'+pass+'", "'+dbName+'", "'+key+'", '+JSON.stringify(value)+', cb);');
        var xhr = new XMLHttpRequest();
        xhr.open(method, 'http://'+couchAddress+'/'+dbName+'/'+key, true);
        xhr.onreadystatechange = function() {
          if(xhr.readyState == 4) {
            cb(xhr.status, xhr.responseText);
          }
        };
        xhr.send(JSON.stringify(value));
      }
      function couchPut(couchAddress, user, pass, dbName, key, value, cb) {
        httpCall(couchAddress, user, pass, dbName, key, value, 'PUT', function(status, response) { 
          if(status == 200 || status == 201 || (status == 412 && response == '{"error":"file_exists","reason":"The database could not be created, the file already exists."}\n')) {
            cb();
          } else if(status == 409) {
            console.log('conflict; getting revision');
            httpCall(couchAddress, user, pass, dbName, key, value, 'GET', function(status2, response2) { 
              console.log('conflict; overwriting');
              try {
                value._rev = JSON.parse(response2)._rev;
                console.log(value);
              } catch(e) {
                console.log('could not re-revision');
                return;
              }
              httpCall(couchAddress, user, pass, dbName, key, value, 'PUT', function(status3) {
                if(status3 == 200 || status3 == 201) {
                  console.log('rePUTting worked');
                  cb();
                } else {
                  console.log('rePUTting failed');
                  cb();
                }
              });
            });
          } else {
            console.log('oops! got a '+status+' from CouchDB PUT');
            cb();
          }
        });
      }
      function genToken(clientId, password) {
        return Base64.encode(clientId+':'+password);
      }
      function randStr(length) {
        var buffer = '';
        while(buffer.length < length) {
          buffer += Math.random().toString(36).substring(2);
        }
        return buffer.substring(0, length);
      }
      function genUser(userName, pwd) {
        var salt=randStr(40);
        return {
          type: 'user',
          name: userName,
          roles: [],
          password_sha: SHA1(pwd+salt),
          salt: salt
        };
      }

      function createUser(couchAddress, masterUser, masterPass, newUser, newPass, cb) {
        var userObj = genUser(newUser, newPass);
        couchPut(couchAddress, masterUser, masterPass, '_users', 'org.couchdb.user:'+newUser, userObj, cb);
      }
      function createDatabase(couchAddress, masterUser, masterPass, dbName, userName, isPublic, cb) {
        couchPut(couchAddress, masterUser, masterPass, dbName, '', '', function() {
          var sec;
          if(isPublic) {
            sec = {
              admins: {names:[userName]}
            };
          } else {
            sec = {
              admins: {names:[userName]},
              readers: {names:[userName]}
            };
          }
          couchPut(couchAddress, masterUser, masterPass, dbName, '_security', sec, cb);
        });
      }
      function createDocument(couchAddress, masterUser, masterPass, dbName, docName, value, cb) {
        couchPut(couchAddress, masterUser, masterPass, dbName, docName, value, cb);
      }
      function allow() {
        var couchAddress = location.host;
        var redirectUri, scope;
        var queryParts = location.search.split('&');
        if(queryParts.length > 0 && queryParts[0].length > 0) {
          queryParts[0] = queryParts[0].substring(1);
        }
        for(var i = 0; i < queryParts.length; i++) {
          var thisParts = queryParts[i].split('=');
          if(thisParts.length > 1) {
            if(thisParts[0] == 'redirect_uri') {
              redirectUri = thisParts[1];
            }
            if(thisParts[0] == 'scope') {
              scope = thisParts[1];
            }
          }
        }
        var couchUser = '';//document.getElementById('userName').value;
        var couchPass = '';//document.getElementById('password').value;
        var clientId = '';
        for(var i=0; i<redirectUri.length; i++) {
          var thisChar = redirectUri[i];
          if((thisChar >= 'a' && thisChar <= 'z') || (thisChar >= 'A' && thisChar <= 'Z')) {
            clientId += thisChar;
          } else {
            clientId += '_';
          }
        }
        var newPass = randStr(40);
        var token = genToken(clientId, newPass);
        createUser(couchAddress, couchUser, couchPass, clientId, newPass, function() {
          createDatabase(couchAddress, couchUser, couchPass, scope.replace('.', '_'), clientId, (scope == 'public'), function() {
            var obj = {shows: {
                "cors": 
                   "function(doc, req) {"
                  +"  delete(doc._revisions);"
                  +"  return {"
                  +"    \"body\": JSON.stringify(doc),"
                  +"    \"headers\": {\"Access-Control-Allow-Origin:\": \"*\"}"
                  +"  };"
                  +"}"
              }
            };
            createDocument(couchAddress, couchUser, couchPass, scope.replace('.', '_'), '_design/remoteStorage', obj, function() {
              var placeToGo = decodeURIComponent(redirectUri) + '#access_token='+token;
              console.log('window.location = '+placeToGo);
              window.location = placeToGo;
            });
          });
        });
      }
    </script>
   <script src="/_browserid/include.js" type="text/javascript"></script>

    <!-- Optional styles -->
    <link rel="stylesheet" type="text/css" href="/_browserid/style.css">
  </head>
  <body onload="showForm();">
    <div id="browserid">
      <div class="login">
        <img src="/_browserid/sign_in_blue.png">
      </div>
      <div class="picture"></div>
    </div>
    <div id="formDiv">
    </div>
  </body>
  <!-- Recommended convenience API -->
  <script src="/_utils/script/jquery.js" type="text/javascript"></script>
  <script src="/_browserid/main.js" type="text/javascript"></script>
</html>
