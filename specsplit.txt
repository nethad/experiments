Steps and substeps with a * are obligatory, all the others may be skipped.

Sequence:
[    [ [A&B&E]C[D|] | [A&B][CE | CDE | CED] ]    [F|]    [ Ga [[Gb[F|]]]* [Gc|Gd|] |]    ]*

myfavouritesandwich:
[ E2,B,A,C2,E1 | B,A,C2,E1,E2 ],E3,Ga1,[Gb4,F1]*,[ Gc1,Gc4 | ],Gd1,Gd2

myfavoritebeer (we're treating the IdP's certificate issuing service as a data service here), non-native, log in to IdP first, have multiple personas:
[ E2,B,C2 | B,C2,E2 ],[ D | E1,E3 ],F

web intents
registering a web intent: E2,C2
using a web intent: B,D1,D2,E1,E3

Note that we're actually doing step Gd wrong. the session cannot be considered to have ended until it has ended on the server, unless the client is trusted, which in general it is not. even if the app and the server are in the same trust zone, it's better for the server to not rely on the client for session end).

Note 2: we should model D and E as one thing.

A*: HELLO
A1) connector->user: login prompt
A2*) user->connector: user id, server id

B*: INTENT:
B1) user->user-agent: app id
B2) app->user: invitation to action
B3) user->app: intention gesture
B4*) app->client:service type, scope, action
B5*) client->connector: service type, scope, action

C*: DISCOVERY
C1) connector->server: service type, scope
C2*) server->connector: service details, service label, service caps,

D) CHOICE
D1) connector->user: service labels
D2*) user-> connector: service label of choice

E) INSTRUCTION
E1) server->user: question
E2*) user->server: user credentials
E3) user->server: answer

F) FEEDBACK
F1) server->client: response

Ga) SESSION START
Ga1*) server->client: token

Gb: SESSION ACTION:
Gb1) app->user: invitation to action
Gb2) user->app: intention gesture
Gb3) app->client: action
Gb4*) client->server: action, token

Gc: CONNECTOR-MEDIATED REVOKATION (FIXME: implement Gc2,Gc3,Gc5 in remoteStorage)
Gc1*) user->connector: request to end session
Gc2*) connector->server: request to end session
Gc3*) server->connector: confirmation of session end
Gc4) connector->client: request to end session
Gc5) connector->user: confirmation of session end

Gd: SERVER-SIDE REVOKATION
Gd1) user->server: request to end session
Gd2) server->user: confirmation of session end
Gd3) server->client: notification of session end
